
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract TaskList {
    uint32 public timestamp;
    uint8 taskId = 1;
    
    struct Task {
        string task;
        uint32 time;
        bool isDone;
    }
    mapping (uint8 => Task) tasks;
    string[] taskList;
    
    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
        timestamp = now;
        
        //setTask(0, "add", timestamp, true);
    }

    function setTask(uint8 _id, string _task, bool _isDone) public {
        timestamp = now;
        Task task = tasks[_id];
        task.task = _task;
        task.time = timestamp;
        task.isDone = _isDone;
        tasks[_id] = task;
    }

    function getTask(uint8 _id) public view returns (Task) {
        // require(_id > taskId, 103);
        return tasks[_id];
    }

    function getListTasks() public view returns (string[]) {
        return taskList;
    }

    function getCountTask() public view returns (uint) {
        return (taskId);
    }

    function addTask(string _task) public {
        timestamp = now;
        bool _isDone = false;
        Task task = tasks[taskId];
        taskId ++;
        taskList.push(task.task);

        task.task = _task;
        task.time = timestamp;
        task.isDone = _isDone;
    }

    function deleteTask(uint8 _id) public {
        delete tasks[_id];
    }

    function taskDone(uint8 _id) public {
        Task task = tasks[taskId];
        task.isDone = true;
    }
}
