pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "GameObjectContract.sol";
import "BaseStationContract.sol";

contract MilitaryUnitContract is GameObjectContract {
    /** 
    üëâ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç "–ë–∞–∑–æ–≤–∞—è —Å—Ç–∞–Ω—Ü–∏—è" –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ "–ë–∞–∑–æ–≤–æ–π –°—Ç–∞–Ω—Ü–∏–∏" "–î–æ–±–∞–≤–∏—Ç—å –≤–æ–µ–Ω–Ω—ã–π —é–Ω–∏—Ç" 
    –∞ —É —Å–µ–±—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–¥—Ä–µ—Å "–ë–∞–∑–æ–≤–æ–π —Å—Ç–∞–Ω—Ü–∏–∏"
    üëâ –∞—Ç–∞–∫–æ–≤–∞—Ç—å (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ò–ò–û [–µ–≥–æ –∞–¥—Ä–µ—Å])
    üëâ –ø–æ–ª—É—á–∏—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏
    üëâ –ø–æ–ª—É—á–∏—Ç—å —Å–∏–ª—É –∑–∞—â–∏—Ç—ã
    üëâ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥–∏–±–µ–ª–∏ [–≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è + —É–±—Ä–∞—Ç—å –≤–æ–µ–Ω–Ω—ã–π —é–Ω–∏—Ç –∏–∑ –±–∞–∑–æ–≤–æ–π —Å—Ç–∞–Ω—Ü–∏–∏]
    üëâ —Å–º–µ—Ä—Ç—å –∏–∑-–∑–∞ –±–∞–∑—ã (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—ã–∑–æ–≤ –æ—Ç —Ä–æ–¥–Ω–æ–π –±–∞–∑–æ–≤–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å)
     [–≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è]
    */
    address addressBaseStation;
    uint healtMilitaryUnit = health;

    constructor(BaseStationContract baseStation) public {
        baseStation.addMilitaryUnit(msg.sender);
        addressBaseStation = msg.sender;
    }

    function takeTheAttack(address addres) virtual public override{
        healtMilitaryUnit -= 1;
    }

    function getProtection() virtual public override {
        require(healtMilitaryUnit < 10);
        healtMilitaryUnit += 1;
    }

    function Attack(address ad) public {
        // –∞—Ç–∞–∫–æ–≤–∞—Ç—å –ø–æ –∞–¥—Ä–µ—Å—Å—É
        healtMilitaryUnit -= 1;
    }
}
